# This is a basic workflow to help you get started with Actions

name: rust

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-rust:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v3
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry
    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index
    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-carg-build-target
    - name: Install stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: Check code format
      run: cargo fmt -- --check
    - name: Check the package for errors
      run: cargo check --all
    - name: Lint rust sources
      run: cargo clippy --all-targets --all-features --tests --benches -- -D warnings
    - name: Run tests
      run: cargo test --all-features -- --test-threads=1 --nocapture
    - name: Generate docs
      run: cargo doc --all-features --no-deps
  build:
    strategy:
      matrix:
        java-version: [ 8 ]
        zk-version: [ 3.4.14, 3.5.9, 3.6.3, 3.7.1, 3.8.0 ]
    runs-on: ubuntu-latest
    steps:
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java-version }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test code
        run: make test ZK_VERSION=${{ matrix.zk-version }}
